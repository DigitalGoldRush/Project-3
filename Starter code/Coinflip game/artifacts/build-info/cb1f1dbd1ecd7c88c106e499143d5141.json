{
	"id": "cb1f1dbd1ecd7c88c106e499143d5141",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol": {
				"content": "pragma solidity ^0.5.1;\n\ncontract CoinFlip {\n\n    uint constant public BET_MIN        = 1 wei;    // The minimum bet\n    uint constant public BET_MAX        = 10 ether;\n    uint public initialBet;                            // Bet of first player\n    uint public outcome;\n    uint public randomNum;\n    uint public housePlayed = 0;\n    uint public playerPlayed = 0;\n    uint public playerChoice = 0;\n    uint public paid         = 0;\n\n\n    // Players' addresses\n    address payable playerA;\n    address payable HouseWallet; // = 0x10b21F7DC7d6BDB16660D827442c7edb3d2523eA; //\n\n\n    \n\n    /**************************************************************************/\n    /*************************** Player Registration **************************/\n    /**************************************************************************/\n\n\n    modifier validBet() {\n        require(msg.value >= BET_MIN);\n        require(msg.value <= BET_MAX);\n        require(initialBet == 0 || msg.value >= initialBet);\n        _;\n    }\n\n    modifier notAlreadyRegistered() {\n        require(msg.sender != playerA);\n        \n        _;\n    }\n\n\n    function register() public payable validBet notAlreadyRegistered {\n        \n        if (HouseWallet == address(0x0)) {\n            HouseWallet = msg.sender;\n            housePlayed = msg.value;\n\n        }\n\n        else if ( playerA == address(0x0) && HouseWallet != address(0x0) ) {\n            playerA    = msg.sender;\n            initialBet = msg.value;\n            playerPlayed = msg.value;\n      \n        }\n\n        \n        \n    }\n\n    /**************************************************************************/\n    /****************************** RESULT PHASE ******************************/\n    /**************************************************************************/\n    \n    \n    modifier is_caller_player() {\n        \n        require(msg.sender == playerA);\n        _;\n    }\n\n    modifier is_legal_play(uint choice) {\n        \n        require(choice > 0);\n        require(choice < 3);\n        _;\n    }\n\n        modifier player_never_played {\n        \n        require(playerChoice < 1);\n        _;\n    }\n\n    function playerChooses(uint choice) public player_never_played is_caller_player is_legal_play(choice) {\n\n        playerChoice = choice;\n\n    }\n\n    modifier has_player_played {\n        \n        require(playerChoice > 0);\n        _;\n    }\n\n    function getOutcome() public has_player_played returns (uint) {\n    \n        \n        randomNum = uint(blockhash(block.number-1)) % 999999;\n        \n\n        if (randomNum % 2 == 0) {\n            \n            outcome = 2;\n            if (playerChoice == 2) {\n\n                paid = 1;            \n                playerA.transfer(address(this).balance);\n                reset();\n            \n            }\n\n        }\n\n        if (randomNum % 2 == 1) {\n\n            outcome = 1;\n            if (playerChoice == 1) {\n\n                paid = 1;\n                //reset();  // Reset game before paying to avoid reentrancy attacks\n                playerA.transfer(address(this).balance);\n                reset();\n            \n            }\n\n        }\n            \n        if (paid == 0) {\n\n            \n            //reset();  // Reset game before paying to avoid reentrancy attacks\n            HouseWallet.transfer(address(this).balance);\n            reset();\n           \n\n        }\n        \n    }\n    \n    // Reset the game.\n\n    function reset() private {\n        \n        initialBet      = 0;\n        playerA         = address(0x0);\n        HouseWallet     = address(0x0);\n        housePlayed     = 0;\n        playerPlayed    = 0;\n        playerChoice    = 0;\n       \n    }\n\n\n\n    /**************************************************************************/\n    /**************************** HELPER FUNCTIONS ****************************/\n    /**************************************************************************/\n\n    // Return contract balance\n    function getContractBalance() public view returns (uint) {\n        return address(this).balance;\n    }\n\n    // Return player's ID\n    function whoAmI() public view returns (uint) {\n        if (msg.sender == playerA) {\n            return 1;\n        } if (msg.sender == HouseWallet) {\n            return 0;\n        }\n    }\n\n\n    modifier game_has_outcome() {\n        require(outcome > 0);\n        _;\n    }\n\n    function reset_contract() public game_has_outcome {\n\n        initialBet      = 0;\n        playerA         = address(0x0);\n        HouseWallet     = address(0x0);\n        outcome         = 0;\n        paid            = 0;\n\n\n    }\n}\n\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol": {
				"CoinFlip": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "BET_MAX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "BET_MIN",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getContractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "getOutcome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "housePlayed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "initialBet",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "outcome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "paid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "playerChoice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "choice",
									"type": "uint256"
								}
							],
							"name": "playerChooses",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "playerPlayed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "randomNum",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "register",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "reset_contract",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "whoAmI",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":25:4582  contract CoinFlip {... */\n  mstore(0x40, 0x80)\n    /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":329:330  0 */\n  0x00\n    /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":303:330  uint public housePlayed = 0 */\n  0x03\n  sstore\n    /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":363:364  0 */\n  0x00\n    /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":336:364  uint public playerPlayed = 0 */\n  0x04\n  sstore\n    /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":397:398  0 */\n  0x00\n    /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":370:398  uint public playerChoice = 0 */\n  0x05\n  sstore\n    /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":431:432  0 */\n  0x00\n    /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":404:432  uint public paid         = 0 */\n  0x06\n  sstore\n    /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":25:4582  contract CoinFlip {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":25:4582  contract CoinFlip {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":25:4582  contract CoinFlip {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7e7e4b47\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xda91254c\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xda91254c\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe92788d6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf630aa65\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xfc98f42e\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x7e7e4b47\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8e687aed\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xadef7cdd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd0017a0c\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_17:\n      dup1\n      0x27793f87\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x27793f87\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x295b4e17\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4e22fb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x6f9fb98a\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x1aa3a008\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1d73c64c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2626ab08\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1122:1557  function register() public payable validBet notAlreadyRegistered {... */\n    tag_2:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      stop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":173:195  uint public initialBet */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_22:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":173:195  uint public initialBet */\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":50:93  uint constant public BET_MIN        = 1 wei */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_25:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":50:93  uint constant public BET_MIN        = 1 wei */\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":251:270  uint public outcome */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_28:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":251:270  uint public outcome */\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":404:432  uint public paid         = 0 */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_31:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":404:432  uint public paid         = 0 */\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4353:4580  function reset_contract() public game_has_outcome {... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_34:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4353:4580  function reset_contract() public game_has_outcome {... */\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      stop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3944:4046  function getContractBalance() public view returns (uint) {... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_37:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3944:4046  function getContractBalance() public view returns (uint) {... */\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2388:3382  function getOutcome() public has_player_played returns (uint) {... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_40:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2388:3382  function getOutcome() public has_player_played returns (uint) {... */\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":336:364  uint public playerPlayed = 0 */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_43:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":336:364  uint public playerPlayed = 0 */\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":370:398  uint public playerChoice = 0 */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_46:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":370:398  uint public playerChoice = 0 */\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":121:167  uint constant public BET_MAX        = 10 ether */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_49:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":121:167  uint constant public BET_MAX        = 10 ether */\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4078:4264  function whoAmI() public view returns (uint) {... */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_52:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4078:4264  function whoAmI() public view returns (uint) {... */\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2145:2287  function playerChooses(uint choice) public player_never_played is_caller_player is_legal_play(choice) {... */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_55:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2145:2287  function playerChooses(uint choice) public player_never_played is_caller_player is_legal_play(choice) {... */\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2145:2287  function playerChooses(uint choice) public player_never_played is_caller_player is_legal_play(choice) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":276:297  uint public randomNum */\n    tag_15:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_59\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_59:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":276:297  uint public randomNum */\n      pop\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":303:330  uint public housePlayed = 0 */\n    tag_16:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_62:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":303:330  uint public housePlayed = 0 */\n      pop\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1122:1557  function register() public payable validBet notAlreadyRegistered {... */\n    tag_21:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":88:93  1 wei */\n      0x01\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":871:880  msg.value */\n      callvalue\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":871:891  msg.value >= BET_MIN */\n      lt\n      iszero\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":863:892  require(msg.value >= BET_MIN) */\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":159:167  10 ether */\n      0x8ac7230489e80000\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":910:919  msg.value */\n      callvalue\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":910:930  msg.value <= BET_MAX */\n      gt\n      iszero\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":902:931  require(msg.value <= BET_MAX) */\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":963:964  0 */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":949:959  initialBet */\n      dup1\n      sload\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":949:964  initialBet == 0 */\n      eq\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":949:991  initialBet == 0 || msg.value >= initialBet */\n      dup1\n      tag_68\n      jumpi\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":981:991  initialBet */\n      sload(0x00)\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":968:977  msg.value */\n      callvalue\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":968:991  msg.value >= initialBet */\n      lt\n      iszero\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":949:991  initialBet == 0 || msg.value >= initialBet */\n    tag_68:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":941:992  require(initialBet == 0 || msg.value >= initialBet) */\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1080:1087  playerA */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1066:1087  msg.sender != playerA */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1066:1076  msg.sender */\n      caller\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1066:1087  msg.sender != playerA */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1058:1088  require(msg.sender != playerA) */\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1233:1236  0x0 */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1210:1237  HouseWallet == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1210:1221  HouseWallet */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1210:1237  HouseWallet == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1206:1532  if (HouseWallet == address(0x0)) {... */\n      iszero\n      tag_73\n      jumpi\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1267:1277  msg.sender */\n      caller\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1253:1264  HouseWallet */\n      0x08\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1253:1277  HouseWallet = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1305:1314  msg.value */\n      callvalue\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1291:1302  housePlayed */\n      0x03\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1291:1314  housePlayed = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1206:1532  if (HouseWallet == address(0x0)) {... */\n      jump(tag_74)\n    tag_73:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1365:1368  0x0 */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1346:1369  playerA == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1346:1353  playerA */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1346:1369  playerA == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1346:1400  playerA == address(0x0) && HouseWallet != address(0x0) */\n      dup1\n      iszero\n      tag_75\n      jumpi\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1396:1399  0x0 */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1373:1400  HouseWallet != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1373:1384  HouseWallet */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1373:1400  HouseWallet != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1346:1400  playerA == address(0x0) && HouseWallet != address(0x0) */\n    tag_75:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1341:1532  if ( playerA == address(0x0) && HouseWallet != address(0x0) ) {... */\n      iszero\n      tag_76\n      jumpi\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1430:1440  msg.sender */\n      caller\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1417:1424  playerA */\n      0x07\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1417:1440  playerA    = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1467:1476  msg.value */\n      callvalue\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1454:1464  initialBet */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1454:1476  initialBet = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1505:1514  msg.value */\n      callvalue\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1490:1502  playerPlayed */\n      0x04\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1490:1514  playerPlayed = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1341:1532  if ( playerA == address(0x0) && HouseWallet != address(0x0) ) {... */\n    tag_76:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1206:1532  if (HouseWallet == address(0x0)) {... */\n    tag_74:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1122:1557  function register() public payable validBet notAlreadyRegistered {... */\n      jump\t// out\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":173:195  uint public initialBet */\n    tag_24:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":50:93  uint constant public BET_MIN        = 1 wei */\n    tag_27:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":88:93  1 wei */\n      0x01\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":50:93  uint constant public BET_MIN        = 1 wei */\n      dup2\n      jump\t// out\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":251:270  uint public outcome */\n    tag_30:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":404:432  uint public paid         = 0 */\n    tag_33:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4353:4580  function reset_contract() public game_has_outcome {... */\n    tag_36:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4327:4328  0 */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4317:4324  outcome */\n      sload(0x01)\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4317:4328  outcome > 0 */\n      gt\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4309:4329  require(outcome > 0) */\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4432:4433  0 */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4414:4424  initialBet */\n      dup1\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4414:4433  initialBet      = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4469:4472  0x0 */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4443:4450  playerA */\n      0x07\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4443:4473  playerA         = address(0x0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4509:4512  0x0 */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4483:4494  HouseWallet */\n      0x08\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4483:4513  HouseWallet     = address(0x0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4541:4542  0 */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4523:4530  outcome */\n      0x01\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4523:4542  outcome         = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4570:4571  0 */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4552:4556  paid */\n      0x06\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4552:4571  paid            = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4353:4580  function reset_contract() public game_has_outcome {... */\n      jump\t// out\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3944:4046  function getContractBalance() public view returns (uint) {... */\n    tag_39:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3995:3999  uint */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4018:4039  address(this).balance */\n      selfbalance\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4011:4039  return address(this).balance */\n      swap1\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3944:4046  function getContractBalance() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2388:3382  function getOutcome() public has_player_played returns (uint) {... */\n    tag_42:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2444:2448  uint */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2362:2363  0 */\n      dup1\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2347:2359  playerChoice */\n      sload(0x05)\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2347:2363  playerChoice > 0 */\n      gt\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2339:2364  require(playerChoice > 0) */\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2520:2526  999999 */\n      0x0f423f\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2514:2515  1 */\n      0x01\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2501:2513  block.number */\n      number\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2501:2515  block.number-1 */\n      sub\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2491:2516  blockhash(block.number-1) */\n      blockhash\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2486:2517  uint(blockhash(block.number-1)) */\n      0x00\n      shr\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2486:2526  uint(blockhash(block.number-1)) % 999999 */\n      dup2\n      tag_84\n      jumpi\n      invalid\n    tag_84:\n      mod\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2474:2483  randomNum */\n      0x02\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2474:2526  randomNum = uint(blockhash(block.number-1)) % 999999 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2567:2568  0 */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2562:2563  2 */\n      0x02\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2550:2559  randomNum */\n      dup1\n      sload\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2550:2563  randomNum % 2 */\n      dup2\n      tag_85\n      jumpi\n      invalid\n    tag_85:\n      mod\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2550:2568  randomNum % 2 == 0 */\n      eq\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2546:2805  if (randomNum % 2 == 0) {... */\n      iszero\n      tag_86\n      jumpi\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2607:2608  2 */\n      0x02\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2597:2604  outcome */\n      0x01\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2597:2608  outcome = 2 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2642:2643  2 */\n      0x02\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2626:2638  playerChoice */\n      sload(0x05)\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2626:2643  playerChoice == 2 */\n      eq\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2622:2794  if (playerChoice == 2) {... */\n      iszero\n      tag_87\n      jumpi\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2671:2672  1 */\n      0x01\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2664:2668  paid */\n      0x06\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2664:2672  paid = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2702:2709  playerA */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2702:2718  playerA.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2702:2741  playerA.transfer(address(this).balance) */\n      0x08fc\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2719:2740  address(this).balance */\n      selfbalance\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2702:2741  playerA.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_88\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_88:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2702:2741  playerA.transfer(address(this).balance) */\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2759:2766  reset() */\n      tag_89\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2759:2764  reset */\n      tag_90\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2759:2766  reset() */\n      jump\t// in\n    tag_89:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2622:2794  if (playerChoice == 2) {... */\n    tag_87:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2546:2805  if (randomNum % 2 == 0) {... */\n    tag_86:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2836:2837  1 */\n      0x01\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2831:2832  2 */\n      0x02\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2819:2828  randomNum */\n      dup1\n      sload\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2819:2832  randomNum % 2 */\n      dup2\n      tag_91\n      jumpi\n      invalid\n    tag_91:\n      mod\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2819:2837  randomNum % 2 == 1 */\n      eq\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2815:3134  if (randomNum % 2 == 1) {... */\n      iszero\n      tag_92\n      jumpi\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2864:2865  1 */\n      0x01\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2854:2861  outcome */\n      dup1\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2854:2865  outcome = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2899:2900  1 */\n      0x01\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2883:2895  playerChoice */\n      sload(0x05)\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2883:2900  playerChoice == 1 */\n      eq\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2879:3123  if (playerChoice == 1) {... */\n      iszero\n      tag_93\n      jumpi\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2928:2929  1 */\n      0x01\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2921:2925  paid */\n      0x06\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2921:2929  paid = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3031:3038  playerA */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3031:3047  playerA.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3031:3070  playerA.transfer(address(this).balance) */\n      0x08fc\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3048:3069  address(this).balance */\n      selfbalance\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3031:3070  playerA.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_94\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_94:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3031:3070  playerA.transfer(address(this).balance) */\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3088:3095  reset() */\n      tag_95\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3088:3093  reset */\n      tag_90\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3088:3095  reset() */\n      jump\t// in\n    tag_95:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2879:3123  if (playerChoice == 1) {... */\n    tag_93:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2815:3134  if (randomNum % 2 == 1) {... */\n    tag_92:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3168:3169  0 */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3160:3164  paid */\n      sload(0x06)\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3160:3169  paid == 0 */\n      eq\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3156:3367  if (paid == 0) {... */\n      iszero\n      tag_96\n      jumpi\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3279:3290  HouseWallet */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3279:3299  HouseWallet.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3279:3322  HouseWallet.transfer(address(this).balance) */\n      0x08fc\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3300:3321  address(this).balance */\n      selfbalance\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3279:3322  HouseWallet.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_97\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_97:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3279:3322  HouseWallet.transfer(address(this).balance) */\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3336:3343  reset() */\n      tag_98\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3336:3341  reset */\n      tag_90\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3336:3343  reset() */\n      jump\t// in\n    tag_98:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3156:3367  if (paid == 0) {... */\n    tag_96:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2388:3382  function getOutcome() public has_player_played returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":336:364  uint public playerPlayed = 0 */\n    tag_45:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":370:398  uint public playerChoice = 0 */\n    tag_48:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":121:167  uint constant public BET_MAX        = 10 ether */\n    tag_51:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":159:167  10 ether */\n      0x8ac7230489e80000\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":121:167  uint constant public BET_MAX        = 10 ether */\n      dup2\n      jump\t// out\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4078:4264  function whoAmI() public view returns (uint) {... */\n    tag_54:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4117:4121  uint */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4151:4158  playerA */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4137:4158  msg.sender == playerA */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4137:4147  msg.sender */\n      caller\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4137:4158  msg.sender == playerA */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4133:4193  if (msg.sender == playerA) {... */\n      iszero\n      tag_100\n      jumpi\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4181:4182  1 */\n      0x01\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4174:4182  return 1 */\n      swap1\n      pop\n      jump(tag_99)\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4133:4193  if (msg.sender == playerA) {... */\n    tag_100:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4212:4223  HouseWallet */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4198:4223  msg.sender == HouseWallet */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4198:4208  msg.sender */\n      caller\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4198:4223  msg.sender == HouseWallet */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4194:4258  if (msg.sender == HouseWallet) {... */\n      iszero\n      tag_101\n      jumpi\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4246:4247  0 */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4239:4247  return 0 */\n      swap1\n      pop\n      jump(tag_99)\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4194:4258  if (msg.sender == HouseWallet) {... */\n    tag_101:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":4078:4264  function whoAmI() public view returns (uint) {... */\n    tag_99:\n      swap1\n      jump\t// out\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2145:2287  function playerChooses(uint choice) public player_never_played is_caller_player is_legal_play(choice) {... */\n    tag_58:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2119:2120  1 */\n      0x01\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2104:2116  playerChoice */\n      sload(0x05)\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2104:2120  playerChoice < 1 */\n      lt\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2096:2121  require(playerChoice < 1) */\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1885:1892  playerA */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1871:1892  msg.sender == playerA */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1871:1881  msg.sender */\n      caller\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1871:1892  msg.sender == playerA */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1863:1893  require(msg.sender == playerA) */\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2239:2245  choice */\n      dup1\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1989:1990  0 */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1980:1986  choice */\n      dup2\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1980:1990  choice > 0 */\n      gt\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1972:1991  require(choice > 0) */\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2018:2019  3 */\n      0x03\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2009:2015  choice */\n      dup2\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2009:2019  choice < 3 */\n      lt\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2001:2020  require(choice < 3) */\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2273:2279  choice */\n      dup2\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2258:2270  playerChoice */\n      0x05\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2258:2279  playerChoice = choice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":1903:1904  _ */\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":2145:2287  function playerChooses(uint choice) public player_never_played is_caller_player is_legal_play(choice) {... */\n      pop\n      jump\t// out\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":276:297  uint public randomNum */\n    tag_61:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":303:330  uint public housePlayed = 0 */\n    tag_64:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3416:3661  function reset() private {... */\n    tag_90:\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3478:3479  0 */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3460:3470  initialBet */\n      dup1\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3460:3479  initialBet      = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3515:3518  0x0 */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3489:3496  playerA */\n      0x07\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3489:3519  playerA         = address(0x0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3555:3558  0x0 */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3529:3540  HouseWallet */\n      0x08\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3529:3559  HouseWallet     = address(0x0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3587:3588  0 */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3569:3580  housePlayed */\n      0x03\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3569:3588  housePlayed     = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3616:3617  0 */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3598:3610  playerPlayed */\n      0x04\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3598:3617  playerPlayed    = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3645:3646  0 */\n      0x00\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3627:3639  playerChoice */\n      0x05\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3627:3646  playerChoice    = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":3416:3661  function reset() private {... */\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820f52fcda2e762d1a2b65d3871624a691092aa3c818bfe13b10a03ca9b5a79625e64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052600060035560006004556000600555600060065534801561002457600080fd5b50610a98806100346000396000f3fe6080604052600436106100e85760003560e01c80637e7e4b471161008a578063da91254c11610059578063da91254c14610291578063e92788d6146102bc578063f630aa65146102f7578063fc98f42e14610322576100e8565b80637e7e4b47146101e55780638e687aed14610210578063adef7cdd1461023b578063d0017a0c14610266576100e8565b806327793f87116100c657806327793f871461014d578063295b4e17146101785780634e22fb5b146101a35780636f9fb98a146101ba576100e8565b80631aa3a008146100ed5780631d73c64c146100f75780632626ab0814610122575b600080fd5b6100f561034d565b005b34801561010357600080fd5b5061010c61058f565b6040518082815260200191505060405180910390f35b34801561012e57600080fd5b50610137610595565b6040518082815260200191505060405180910390f35b34801561015957600080fd5b5061016261059a565b6040518082815260200191505060405180910390f35b34801561018457600080fd5b5061018d6105a0565b6040518082815260200191505060405180910390f35b3480156101af57600080fd5b506101b86105a6565b005b3480156101c657600080fd5b506101cf610652565b6040518082815260200191505060405180910390f35b3480156101f157600080fd5b506101fa61065a565b6040518082815260200191505060405180910390f35b34801561021c57600080fd5b50610225610847565b6040518082815260200191505060405180910390f35b34801561024757600080fd5b5061025061084d565b6040518082815260200191505060405180910390f35b34801561027257600080fd5b5061027b610853565b6040518082815260200191505060405180910390f35b34801561029d57600080fd5b506102a661085f565b6040518082815260200191505060405180910390f35b3480156102c857600080fd5b506102f5600480360360208110156102df57600080fd5b8101908080359060200190929190505050610923565b005b34801561030357600080fd5b5061030c6109b2565b6040518082815260200191505060405180910390f35b34801561032e57600080fd5b506103376109b8565b6040518082815260200191505060405180910390f35b600134101561035b57600080fd5b678ac7230489e8000034111561037057600080fd5b60008054148061038257506000543410155b61038b57600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103e657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561048a5733600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503460038190555061058d565b600073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156105375750600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561058c5733600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600081905550346004819055505b5b565b60005481565b600181565b60015481565b60065481565b6000600154116105b557600080fd5b600080819055506000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006001819055506000600681905550565b600047905090565b6000806005541161066a57600080fd5b620f423f600143034060001c8161067d57fe5b066002819055506000600280548161069157fe5b06141561072657600260018190555060026005541415610725576001600681905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561071b573d6000803e3d6000fd5b506107246109be565b5b5b6001600280548161073357fe5b0614156107c75760018081905550600160055414156107c6576001600681905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156107bc573d6000803e3d6000fd5b506107c56109be565b5b5b6000600654141561084457600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561083a573d6000803e3d6000fd5b506108436109be565b5b90565b60045481565b60055481565b678ac7230489e8000081565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156108c05760019050610920565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561091f5760009050610920565b5b90565b60016005541061093257600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461098c57600080fd5b806000811161099a57600080fd5b600381106109a757600080fd5b816005819055505050565b60025481565b60035481565b600080819055506000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006003819055506000600481905550600060058190555056fea265627a7a72315820f52fcda2e762d1a2b65d3871624a691092aa3c818bfe13b10a03ca9b5a79625e64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x3 SSTORE PUSH1 0x0 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH1 0x0 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA98 DUP1 PUSH2 0x34 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E7E4B47 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDA91254C GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xDA91254C EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xE92788D6 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xF630AA65 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xFC98F42E EQ PUSH2 0x322 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x7E7E4B47 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x8E687AED EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0xADEF7CDD EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xD0017A0C EQ PUSH2 0x266 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x27793F87 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x27793F87 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x295B4E17 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x4E22FB5B EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x1BA JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x1AA3A008 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x1D73C64C EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x2626AB08 EQ PUSH2 0x122 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF5 PUSH2 0x34D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x58F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH2 0x595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x59A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x5A6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x853 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x85F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x923 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x337 PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 CALLVALUE LT ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 CALLVALUE GT ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD EQ DUP1 PUSH2 0x382 JUMPI POP PUSH1 0x0 SLOAD CALLVALUE LT ISZERO JUMPDEST PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x48A JUMPI CALLER PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x58D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x537 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x58C JUMPI CALLER PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD GT PUSH2 0x5B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD GT PUSH2 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xF423F PUSH1 0x1 NUMBER SUB BLOCKHASH PUSH1 0x0 SHR DUP2 PUSH2 0x67D JUMPI INVALID JUMPDEST MOD PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD DUP2 PUSH2 0x691 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x726 JUMPI PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x5 SLOAD EQ ISZERO PUSH2 0x725 JUMPI PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x71B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x724 PUSH2 0x9BE JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP1 SLOAD DUP2 PUSH2 0x733 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 SLOAD EQ ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x7C5 PUSH2 0x9BE JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x844 JUMPI PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x83A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x843 PUSH2 0x9BE JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x920 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x91F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x920 JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 SLOAD LT PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x98C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 GT PUSH2 0x99A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x9A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CREATE2 0x2F 0xCD LOG2 0xE7 PUSH3 0xD1A2B6 0x5D CODESIZE PUSH18 0x624A691092AA3C818BFE13B10A03CA9B5A79 PUSH3 0x5E6473 PUSH16 0x6C634300051100320000000000000000 ",
							"sourceMap": "25:4557:0:-;;;329:1;303:27;;363:1;336:28;;397:1;370:28;;431:1;404:28;;25:4557;8:9:-1;5:2;;;30:1;27;20:12;5:2;25:4557:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100e85760003560e01c80637e7e4b471161008a578063da91254c11610059578063da91254c14610291578063e92788d6146102bc578063f630aa65146102f7578063fc98f42e14610322576100e8565b80637e7e4b47146101e55780638e687aed14610210578063adef7cdd1461023b578063d0017a0c14610266576100e8565b806327793f87116100c657806327793f871461014d578063295b4e17146101785780634e22fb5b146101a35780636f9fb98a146101ba576100e8565b80631aa3a008146100ed5780631d73c64c146100f75780632626ab0814610122575b600080fd5b6100f561034d565b005b34801561010357600080fd5b5061010c61058f565b6040518082815260200191505060405180910390f35b34801561012e57600080fd5b50610137610595565b6040518082815260200191505060405180910390f35b34801561015957600080fd5b5061016261059a565b6040518082815260200191505060405180910390f35b34801561018457600080fd5b5061018d6105a0565b6040518082815260200191505060405180910390f35b3480156101af57600080fd5b506101b86105a6565b005b3480156101c657600080fd5b506101cf610652565b6040518082815260200191505060405180910390f35b3480156101f157600080fd5b506101fa61065a565b6040518082815260200191505060405180910390f35b34801561021c57600080fd5b50610225610847565b6040518082815260200191505060405180910390f35b34801561024757600080fd5b5061025061084d565b6040518082815260200191505060405180910390f35b34801561027257600080fd5b5061027b610853565b6040518082815260200191505060405180910390f35b34801561029d57600080fd5b506102a661085f565b6040518082815260200191505060405180910390f35b3480156102c857600080fd5b506102f5600480360360208110156102df57600080fd5b8101908080359060200190929190505050610923565b005b34801561030357600080fd5b5061030c6109b2565b6040518082815260200191505060405180910390f35b34801561032e57600080fd5b506103376109b8565b6040518082815260200191505060405180910390f35b600134101561035b57600080fd5b678ac7230489e8000034111561037057600080fd5b60008054148061038257506000543410155b61038b57600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103e657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561048a5733600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503460038190555061058d565b600073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156105375750600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561058c5733600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600081905550346004819055505b5b565b60005481565b600181565b60015481565b60065481565b6000600154116105b557600080fd5b600080819055506000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006001819055506000600681905550565b600047905090565b6000806005541161066a57600080fd5b620f423f600143034060001c8161067d57fe5b066002819055506000600280548161069157fe5b06141561072657600260018190555060026005541415610725576001600681905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561071b573d6000803e3d6000fd5b506107246109be565b5b5b6001600280548161073357fe5b0614156107c75760018081905550600160055414156107c6576001600681905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156107bc573d6000803e3d6000fd5b506107c56109be565b5b5b6000600654141561084457600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561083a573d6000803e3d6000fd5b506108436109be565b5b90565b60045481565b60055481565b678ac7230489e8000081565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156108c05760019050610920565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561091f5760009050610920565b5b90565b60016005541061093257600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461098c57600080fd5b806000811161099a57600080fd5b600381106109a757600080fd5b816005819055505050565b60025481565b60035481565b600080819055506000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006003819055506000600481905550600060058190555056fea265627a7a72315820f52fcda2e762d1a2b65d3871624a691092aa3c818bfe13b10a03ca9b5a79625e64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E7E4B47 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDA91254C GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xDA91254C EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xE92788D6 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xF630AA65 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xFC98F42E EQ PUSH2 0x322 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x7E7E4B47 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x8E687AED EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0xADEF7CDD EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xD0017A0C EQ PUSH2 0x266 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x27793F87 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x27793F87 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x295B4E17 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x4E22FB5B EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x1BA JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x1AA3A008 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x1D73C64C EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x2626AB08 EQ PUSH2 0x122 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF5 PUSH2 0x34D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x58F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH2 0x595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x59A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x5A6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x853 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x85F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x923 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x337 PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 CALLVALUE LT ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 CALLVALUE GT ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD EQ DUP1 PUSH2 0x382 JUMPI POP PUSH1 0x0 SLOAD CALLVALUE LT ISZERO JUMPDEST PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x48A JUMPI CALLER PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x58D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x537 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x58C JUMPI CALLER PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD GT PUSH2 0x5B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD GT PUSH2 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xF423F PUSH1 0x1 NUMBER SUB BLOCKHASH PUSH1 0x0 SHR DUP2 PUSH2 0x67D JUMPI INVALID JUMPDEST MOD PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD DUP2 PUSH2 0x691 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x726 JUMPI PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x5 SLOAD EQ ISZERO PUSH2 0x725 JUMPI PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x71B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x724 PUSH2 0x9BE JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP1 SLOAD DUP2 PUSH2 0x733 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 SLOAD EQ ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x7C5 PUSH2 0x9BE JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x844 JUMPI PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x83A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x843 PUSH2 0x9BE JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x920 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x91F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x920 JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 SLOAD LT PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x98C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 GT PUSH2 0x99A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x9A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CREATE2 0x2F 0xCD LOG2 0xE7 PUSH3 0xD1A2B6 0x5D CODESIZE PUSH18 0x624A691092AA3C818BFE13B10A03CA9B5A79 PUSH3 0x5E6473 PUSH16 0x6C634300051100320000000000000000 ",
							"sourceMap": "25:4557:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1122:435;;;:::i;:::-;;173:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;173:22:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;50:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;50:43:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;251:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;251:19:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;404:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;404:28:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4353:227;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4353:227:0;;;:::i;:::-;;3944:102;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3944:102:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2388:994;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2388:994:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;336:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;336:28:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;370;;8:9:-1;5:2;;;30:1;27;20:12;5:2;370:28:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;121:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;121:46:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4078:186;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4078:186:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2145:142;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2145:142:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2145:142:0;;;;;;;;;;;;;;;;;:::i;:::-;;276:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;276:21:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;303:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;303:27:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1122:435;88:5;871:9;:20;;863:29;;;;;;159:8;910:9;:20;;902:29;;;;;;963:1;949:10;;:15;:42;;;;981:10;;968:9;:23;;949:42;941:51;;;;;;1080:7;;;;;;;;;;;1066:21;;:10;:21;;;;1058:30;;;;;;1233:3;1210:27;;:11;;;;;;;;;;;:27;;;1206:326;;;1267:10;1253:11;;:24;;;;;;;;;;;;;;;;;;1305:9;1291:11;:23;;;;1206:326;;;1365:3;1346:23;;:7;;;;;;;;;;;:23;;;:54;;;;;1396:3;1373:27;;:11;;;;;;;;;;;:27;;;;1346:54;1341:191;;;1430:10;1417:7;;:23;;;;;;;;;;;;;;;;;;1467:9;1454:10;:22;;;;1505:9;1490:12;:24;;;;1341:191;1206:326;1122:435::o;173:22::-;;;;:::o;50:43::-;88:5;50:43;:::o;251:19::-;;;;:::o;404:28::-;;;;:::o;4353:227::-;4327:1;4317:7;;:11;4309:20;;;;;;4432:1;4414:10;:19;;;;4469:3;4443:7;;:30;;;;;;;;;;;;;;;;;;4509:3;4483:11;;:30;;;;;;;;;;;;;;;;;;4541:1;4523:7;:19;;;;4570:1;4552:4;:19;;;;4353:227::o;3944:102::-;3995:4;4018:21;4011:28;;3944:102;:::o;2388:994::-;2444:4;2362:1;2347:12;;:16;2339:25;;;;;;2520:6;2514:1;2501:12;:14;2491:25;2486:31;;:40;;;;;;2474:9;:52;;;;2567:1;2562;2550:9;;:13;;;;;;:18;2546:259;;;2607:1;2597:7;:11;;;;2642:1;2626:12;;:17;2622:172;;;2671:1;2664:4;:8;;;;2702:7;;;;;;;;;;;:16;;:39;2719:21;2702:39;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2702:39:0;2759:7;:5;:7::i;:::-;2622:172;2546:259;2836:1;2831;2819:9;;:13;;;;;;:18;2815:319;;;2864:1;2854:7;:11;;;;2899:1;2883:12;;:17;2879:244;;;2928:1;2921:4;:8;;;;3031:7;;;;;;;;;;;:16;;:39;3048:21;3031:39;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3031:39:0;3088:7;:5;:7::i;:::-;2879:244;2815:319;3168:1;3160:4;;:9;3156:211;;;3279:11;;;;;;;;;;;:20;;:43;3300:21;3279:43;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3279:43:0;3336:7;:5;:7::i;:::-;3156:211;2388:994;:::o;336:28::-;;;;:::o;370:::-;;;;:::o;121:46::-;159:8;121:46;:::o;4078:186::-;4117:4;4151:7;;;;;;;;;;;4137:21;;:10;:21;;;4133:60;;;4181:1;4174:8;;;;4133:60;4212:11;;;;;;;;;;;4198:25;;:10;:25;;;4194:64;;;4246:1;4239:8;;;;4194:64;4078:186;;:::o;2145:142::-;2119:1;2104:12;;:16;2096:25;;;;;;1885:7;;;;;;;;;;;1871:21;;:10;:21;;;1863:30;;;;;;2239:6;1989:1;1980:6;:10;1972:19;;;;;;2018:1;2009:6;:10;2001:19;;;;;;2273:6;2258:12;:21;;;;1903:1;2145:142;:::o;276:21::-;;;;:::o;303:27::-;;;;:::o;3416:245::-;3478:1;3460:10;:19;;;;3515:3;3489:7;;:30;;;;;;;;;;;;;;;;;;3555:3;3529:11;;:30;;;;;;;;;;;;;;;;;;3587:1;3569:11;:19;;;;3616:1;3598:12;:19;;;;3645:1;3627:12;:19;;;;3416:245::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "542400",
								"executionCost": "20599",
								"totalCost": "562999"
							},
							"external": {
								"BET_MAX()": "294",
								"BET_MIN()": "273",
								"getContractBalance()": "304",
								"getOutcome()": "infinite",
								"housePlayed()": "1093",
								"initialBet()": "1051",
								"outcome()": "1028",
								"paid()": "1050",
								"playerChoice()": "1072",
								"playerChooses(uint256)": "22030",
								"playerPlayed()": "1050",
								"randomNum()": "1071",
								"register()": "66243",
								"reset_contract()": "57810",
								"whoAmI()": "1992"
							},
							"internal": {
								"reset()": "61799"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 4582,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 25,
									"end": 4582,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 4582,
									"name": "MSTORE"
								},
								{
									"begin": 329,
									"end": 330,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 303,
									"end": 330,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 303,
									"end": 330,
									"name": "SSTORE"
								},
								{
									"begin": 363,
									"end": 364,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 336,
									"end": 364,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 336,
									"end": 364,
									"name": "SSTORE"
								},
								{
									"begin": 397,
									"end": 398,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 370,
									"end": 398,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 370,
									"end": 398,
									"name": "SSTORE"
								},
								{
									"begin": 431,
									"end": 432,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 404,
									"end": 432,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 404,
									"end": 432,
									"name": "SSTORE"
								},
								{
									"begin": 25,
									"end": 4582,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 4582,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 4582,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 4582,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 4582,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 4582,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 4582,
									"name": "CODECOPY"
								},
								{
									"begin": 25,
									"end": 4582,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 4582,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820f52fcda2e762d1a2b65d3871624a691092aa3c818bfe13b10a03ca9b5a79625e64736f6c63430005110032",
									".code": [
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "LT"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "SHR"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "7E7E4B47"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "GT"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "DA91254C"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "GT"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "DA91254C"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "E92788D6"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "F630AA65"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "FC98F42E"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMP"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "7E7E4B47"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "8E687AED"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "ADEF7CDD"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "D0017A0C"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMP"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "27793F87"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "GT"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "27793F87"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "295B4E17"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "4E22FB5B"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "6F9FB98A"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMP"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "1AA3A008"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "1D73C64C"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "2626AB08"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4582,
											"name": "REVERT"
										},
										{
											"begin": 1122,
											"end": 1557,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1122,
											"end": 1557,
											"name": "JUMPDEST"
										},
										{
											"begin": 1122,
											"end": 1557,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1557,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1122,
											"end": 1557,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1557,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1557,
											"name": "JUMPDEST"
										},
										{
											"begin": 1122,
											"end": 1557,
											"name": "STOP"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "JUMPDEST"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "POP"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "JUMPDEST"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "MLOAD"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "DUP1"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "DUP3"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "DUP2"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "MSTORE"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "ADD"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "SWAP2"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "POP"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "POP"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "MLOAD"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "DUP1"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "SWAP2"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "SUB"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "SWAP1"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "RETURN"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "JUMPDEST"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "JUMPDEST"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "MLOAD"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "DUP1"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "DUP3"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "DUP2"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "MSTORE"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "ADD"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "SWAP2"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "MLOAD"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "DUP1"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "SWAP2"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "SUB"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "SWAP1"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "RETURN"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "JUMPDEST"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "POP"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "JUMPDEST"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "MLOAD"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "DUP3"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "MSTORE"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "SWAP2"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "POP"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "POP"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "MLOAD"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "SWAP2"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "SUB"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "RETURN"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "JUMPDEST"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "POP"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "JUMPDEST"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "MLOAD"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "DUP1"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "DUP3"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "DUP2"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "MSTORE"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "ADD"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "SWAP2"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "POP"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "POP"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "MLOAD"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "DUP1"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "SWAP2"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "SUB"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "SWAP1"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "RETURN"
										},
										{
											"begin": 4353,
											"end": 4580,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 4353,
											"end": 4580,
											"name": "JUMPDEST"
										},
										{
											"begin": 4353,
											"end": 4580,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4353,
											"end": 4580,
											"name": "POP"
										},
										{
											"begin": 4353,
											"end": 4580,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 4353,
											"end": 4580,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 4353,
											"end": 4580,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4353,
											"end": 4580,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 4353,
											"end": 4580,
											"name": "JUMPDEST"
										},
										{
											"begin": 4353,
											"end": 4580,
											"name": "STOP"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "JUMPDEST"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "JUMPDEST"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "MLOAD"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "DUP3"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "SWAP2"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "MLOAD"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "SWAP2"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "SUB"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "SWAP1"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "RETURN"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "JUMPDEST"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "POP"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "JUMPDEST"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "MLOAD"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "DUP1"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "DUP3"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "DUP2"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "MSTORE"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "ADD"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "SWAP2"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "POP"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "POP"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "MLOAD"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "DUP1"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "SWAP2"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "SUB"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "SWAP1"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "RETURN"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "JUMPDEST"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "POP"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "JUMPDEST"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "MLOAD"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "DUP1"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "DUP3"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "DUP2"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "MSTORE"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "ADD"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "SWAP2"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "POP"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "POP"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "MLOAD"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "DUP1"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "SWAP2"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "SUB"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "SWAP1"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "RETURN"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "JUMPDEST"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "POP"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "JUMPDEST"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "MLOAD"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "DUP1"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "DUP3"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "DUP2"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "ADD"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "SWAP2"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "POP"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "POP"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "MLOAD"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "DUP1"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "SWAP2"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "SUB"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "SWAP1"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "RETURN"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "JUMPDEST"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "POP"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "JUMPDEST"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "MLOAD"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "DUP2"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "MSTORE"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "ADD"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "SWAP2"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "POP"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "POP"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "MLOAD"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "SWAP2"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "SUB"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "SWAP1"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "RETURN"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "JUMPDEST"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "POP"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "JUMPDEST"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "MLOAD"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "DUP1"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "DUP3"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "DUP2"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "MSTORE"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "ADD"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "SWAP2"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "POP"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "POP"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "MLOAD"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "DUP1"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "SWAP2"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "SUB"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "SWAP1"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "RETURN"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "JUMPDEST"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "POP"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "DUP1"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "DUP2"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "ADD"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "SWAP1"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "DUP1"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "DUP1"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "SWAP1"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "ADD"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "SWAP1"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "SWAP3"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "SWAP2"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "SWAP1"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "POP"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "POP"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "POP"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "JUMPDEST"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "STOP"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "JUMPDEST"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "POP"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "JUMPDEST"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "MLOAD"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "DUP1"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "DUP3"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "DUP2"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "MSTORE"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "ADD"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "SWAP2"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "POP"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "POP"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "MLOAD"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "DUP1"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "SWAP2"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "SUB"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "SWAP1"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "RETURN"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "POP"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "MLOAD"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "DUP1"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "DUP3"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "DUP2"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "MSTORE"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "ADD"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "SWAP2"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "POP"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "POP"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "MLOAD"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "DUP1"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "SWAP2"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "SUB"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "SWAP1"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "RETURN"
										},
										{
											"begin": 1122,
											"end": 1557,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1122,
											"end": 1557,
											"name": "JUMPDEST"
										},
										{
											"begin": 88,
											"end": 93,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 871,
											"end": 880,
											"name": "CALLVALUE"
										},
										{
											"begin": 871,
											"end": 891,
											"name": "LT"
										},
										{
											"begin": 871,
											"end": 891,
											"name": "ISZERO"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMPI"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "DUP1"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "REVERT"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMPDEST"
										},
										{
											"begin": 159,
											"end": 167,
											"name": "PUSH",
											"value": "8AC7230489E80000"
										},
										{
											"begin": 910,
											"end": 919,
											"name": "CALLVALUE"
										},
										{
											"begin": 910,
											"end": 930,
											"name": "GT"
										},
										{
											"begin": 910,
											"end": 930,
											"name": "ISZERO"
										},
										{
											"begin": 902,
											"end": 931,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 902,
											"end": 931,
											"name": "JUMPI"
										},
										{
											"begin": 902,
											"end": 931,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 902,
											"end": 931,
											"name": "DUP1"
										},
										{
											"begin": 902,
											"end": 931,
											"name": "REVERT"
										},
										{
											"begin": 902,
											"end": 931,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 902,
											"end": 931,
											"name": "JUMPDEST"
										},
										{
											"begin": 963,
											"end": 964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 949,
											"end": 959,
											"name": "DUP1"
										},
										{
											"begin": 949,
											"end": 959,
											"name": "SLOAD"
										},
										{
											"begin": 949,
											"end": 964,
											"name": "EQ"
										},
										{
											"begin": 949,
											"end": 991,
											"name": "DUP1"
										},
										{
											"begin": 949,
											"end": 991,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 949,
											"end": 991,
											"name": "JUMPI"
										},
										{
											"begin": 949,
											"end": 991,
											"name": "POP"
										},
										{
											"begin": 981,
											"end": 991,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 981,
											"end": 991,
											"name": "SLOAD"
										},
										{
											"begin": 968,
											"end": 977,
											"name": "CALLVALUE"
										},
										{
											"begin": 968,
											"end": 991,
											"name": "LT"
										},
										{
											"begin": 968,
											"end": 991,
											"name": "ISZERO"
										},
										{
											"begin": 949,
											"end": 991,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 949,
											"end": 991,
											"name": "JUMPDEST"
										},
										{
											"begin": 941,
											"end": 992,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 941,
											"end": 992,
											"name": "JUMPI"
										},
										{
											"begin": 941,
											"end": 992,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 941,
											"end": 992,
											"name": "DUP1"
										},
										{
											"begin": 941,
											"end": 992,
											"name": "REVERT"
										},
										{
											"begin": 941,
											"end": 992,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 941,
											"end": 992,
											"name": "JUMPDEST"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "SWAP1"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "SLOAD"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "SWAP1"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "EXP"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "SWAP1"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "DIV"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "AND"
										},
										{
											"begin": 1066,
											"end": 1087,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1066,
											"end": 1087,
											"name": "AND"
										},
										{
											"begin": 1066,
											"end": 1076,
											"name": "CALLER"
										},
										{
											"begin": 1066,
											"end": 1087,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1066,
											"end": 1087,
											"name": "AND"
										},
										{
											"begin": 1066,
											"end": 1087,
											"name": "EQ"
										},
										{
											"begin": 1066,
											"end": 1087,
											"name": "ISZERO"
										},
										{
											"begin": 1058,
											"end": 1088,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 1058,
											"end": 1088,
											"name": "JUMPI"
										},
										{
											"begin": 1058,
											"end": 1088,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1058,
											"end": 1088,
											"name": "DUP1"
										},
										{
											"begin": 1058,
											"end": 1088,
											"name": "REVERT"
										},
										{
											"begin": 1058,
											"end": 1088,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 1058,
											"end": 1088,
											"name": "JUMPDEST"
										},
										{
											"begin": 1233,
											"end": 1236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1210,
											"end": 1237,
											"name": "AND"
										},
										{
											"begin": 1210,
											"end": 1221,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1210,
											"end": 1221,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1221,
											"name": "SWAP1"
										},
										{
											"begin": 1210,
											"end": 1221,
											"name": "SLOAD"
										},
										{
											"begin": 1210,
											"end": 1221,
											"name": "SWAP1"
										},
										{
											"begin": 1210,
											"end": 1221,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1210,
											"end": 1221,
											"name": "EXP"
										},
										{
											"begin": 1210,
											"end": 1221,
											"name": "SWAP1"
										},
										{
											"begin": 1210,
											"end": 1221,
											"name": "DIV"
										},
										{
											"begin": 1210,
											"end": 1221,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1210,
											"end": 1221,
											"name": "AND"
										},
										{
											"begin": 1210,
											"end": 1237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1210,
											"end": 1237,
											"name": "AND"
										},
										{
											"begin": 1210,
											"end": 1237,
											"name": "EQ"
										},
										{
											"begin": 1206,
											"end": 1532,
											"name": "ISZERO"
										},
										{
											"begin": 1206,
											"end": 1532,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 1206,
											"end": 1532,
											"name": "JUMPI"
										},
										{
											"begin": 1267,
											"end": 1277,
											"name": "CALLER"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "EXP"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "DUP2"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "SLOAD"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "DUP2"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "MUL"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "NOT"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "AND"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "SWAP1"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "DUP4"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "AND"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "MUL"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "OR"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "SWAP1"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "SSTORE"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "POP"
										},
										{
											"begin": 1305,
											"end": 1314,
											"name": "CALLVALUE"
										},
										{
											"begin": 1291,
											"end": 1302,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "DUP2"
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "SWAP1"
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "SSTORE"
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "POP"
										},
										{
											"begin": 1206,
											"end": 1532,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 1206,
											"end": 1532,
											"name": "JUMP"
										},
										{
											"begin": 1206,
											"end": 1532,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 1206,
											"end": 1532,
											"name": "JUMPDEST"
										},
										{
											"begin": 1365,
											"end": 1368,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1346,
											"end": 1369,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1346,
											"end": 1369,
											"name": "AND"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "SWAP1"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "SLOAD"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "SWAP1"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "EXP"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "SWAP1"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DIV"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "AND"
										},
										{
											"begin": 1346,
											"end": 1369,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1346,
											"end": 1369,
											"name": "AND"
										},
										{
											"begin": 1346,
											"end": 1369,
											"name": "EQ"
										},
										{
											"begin": 1346,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1346,
											"end": 1400,
											"name": "ISZERO"
										},
										{
											"begin": 1346,
											"end": 1400,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 1346,
											"end": 1400,
											"name": "JUMPI"
										},
										{
											"begin": 1346,
											"end": 1400,
											"name": "POP"
										},
										{
											"begin": 1396,
											"end": 1399,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1400,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1373,
											"end": 1400,
											"name": "AND"
										},
										{
											"begin": 1373,
											"end": 1384,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1373,
											"end": 1384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1384,
											"name": "SWAP1"
										},
										{
											"begin": 1373,
											"end": 1384,
											"name": "SLOAD"
										},
										{
											"begin": 1373,
											"end": 1384,
											"name": "SWAP1"
										},
										{
											"begin": 1373,
											"end": 1384,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1373,
											"end": 1384,
											"name": "EXP"
										},
										{
											"begin": 1373,
											"end": 1384,
											"name": "SWAP1"
										},
										{
											"begin": 1373,
											"end": 1384,
											"name": "DIV"
										},
										{
											"begin": 1373,
											"end": 1384,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1373,
											"end": 1384,
											"name": "AND"
										},
										{
											"begin": 1373,
											"end": 1400,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1373,
											"end": 1400,
											"name": "AND"
										},
										{
											"begin": 1373,
											"end": 1400,
											"name": "EQ"
										},
										{
											"begin": 1373,
											"end": 1400,
											"name": "ISZERO"
										},
										{
											"begin": 1346,
											"end": 1400,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 1346,
											"end": 1400,
											"name": "JUMPDEST"
										},
										{
											"begin": 1341,
											"end": 1532,
											"name": "ISZERO"
										},
										{
											"begin": 1341,
											"end": 1532,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 1341,
											"end": 1532,
											"name": "JUMPI"
										},
										{
											"begin": 1430,
											"end": 1440,
											"name": "CALLER"
										},
										{
											"begin": 1417,
											"end": 1424,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 1417,
											"end": 1424,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "EXP"
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "DUP2"
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "SLOAD"
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "DUP2"
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "MUL"
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "NOT"
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "AND"
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "SWAP1"
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "DUP4"
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "AND"
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "MUL"
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "OR"
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "SWAP1"
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "SSTORE"
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "POP"
										},
										{
											"begin": 1467,
											"end": 1476,
											"name": "CALLVALUE"
										},
										{
											"begin": 1454,
											"end": 1464,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1476,
											"name": "DUP2"
										},
										{
											"begin": 1454,
											"end": 1476,
											"name": "SWAP1"
										},
										{
											"begin": 1454,
											"end": 1476,
											"name": "SSTORE"
										},
										{
											"begin": 1454,
											"end": 1476,
											"name": "POP"
										},
										{
											"begin": 1505,
											"end": 1514,
											"name": "CALLVALUE"
										},
										{
											"begin": 1490,
											"end": 1502,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1490,
											"end": 1514,
											"name": "DUP2"
										},
										{
											"begin": 1490,
											"end": 1514,
											"name": "SWAP1"
										},
										{
											"begin": 1490,
											"end": 1514,
											"name": "SSTORE"
										},
										{
											"begin": 1490,
											"end": 1514,
											"name": "POP"
										},
										{
											"begin": 1341,
											"end": 1532,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 1341,
											"end": 1532,
											"name": "JUMPDEST"
										},
										{
											"begin": 1206,
											"end": 1532,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 1206,
											"end": 1532,
											"name": "JUMPDEST"
										},
										{
											"begin": 1122,
											"end": 1557,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "JUMPDEST"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "SLOAD"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "DUP2"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "JUMPDEST"
										},
										{
											"begin": 88,
											"end": 93,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "DUP2"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "JUMPDEST"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "SLOAD"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "JUMPDEST"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "SLOAD"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "DUP2"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4353,
											"end": 4580,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 4353,
											"end": 4580,
											"name": "JUMPDEST"
										},
										{
											"begin": 4327,
											"end": 4328,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4317,
											"end": 4324,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4317,
											"end": 4324,
											"name": "SLOAD"
										},
										{
											"begin": 4317,
											"end": 4328,
											"name": "GT"
										},
										{
											"begin": 4309,
											"end": 4329,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 4309,
											"end": 4329,
											"name": "JUMPI"
										},
										{
											"begin": 4309,
											"end": 4329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4309,
											"end": 4329,
											"name": "DUP1"
										},
										{
											"begin": 4309,
											"end": 4329,
											"name": "REVERT"
										},
										{
											"begin": 4309,
											"end": 4329,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 4309,
											"end": 4329,
											"name": "JUMPDEST"
										},
										{
											"begin": 4432,
											"end": 4433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4424,
											"name": "DUP1"
										},
										{
											"begin": 4414,
											"end": 4433,
											"name": "DUP2"
										},
										{
											"begin": 4414,
											"end": 4433,
											"name": "SWAP1"
										},
										{
											"begin": 4414,
											"end": 4433,
											"name": "SSTORE"
										},
										{
											"begin": 4414,
											"end": 4433,
											"name": "POP"
										},
										{
											"begin": 4469,
											"end": 4472,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4450,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4443,
											"end": 4450,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4473,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4443,
											"end": 4473,
											"name": "EXP"
										},
										{
											"begin": 4443,
											"end": 4473,
											"name": "DUP2"
										},
										{
											"begin": 4443,
											"end": 4473,
											"name": "SLOAD"
										},
										{
											"begin": 4443,
											"end": 4473,
											"name": "DUP2"
										},
										{
											"begin": 4443,
											"end": 4473,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4443,
											"end": 4473,
											"name": "MUL"
										},
										{
											"begin": 4443,
											"end": 4473,
											"name": "NOT"
										},
										{
											"begin": 4443,
											"end": 4473,
											"name": "AND"
										},
										{
											"begin": 4443,
											"end": 4473,
											"name": "SWAP1"
										},
										{
											"begin": 4443,
											"end": 4473,
											"name": "DUP4"
										},
										{
											"begin": 4443,
											"end": 4473,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4443,
											"end": 4473,
											"name": "AND"
										},
										{
											"begin": 4443,
											"end": 4473,
											"name": "MUL"
										},
										{
											"begin": 4443,
											"end": 4473,
											"name": "OR"
										},
										{
											"begin": 4443,
											"end": 4473,
											"name": "SWAP1"
										},
										{
											"begin": 4443,
											"end": 4473,
											"name": "SSTORE"
										},
										{
											"begin": 4443,
											"end": 4473,
											"name": "POP"
										},
										{
											"begin": 4509,
											"end": 4512,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4483,
											"end": 4494,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4483,
											"end": 4494,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4483,
											"end": 4513,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4483,
											"end": 4513,
											"name": "EXP"
										},
										{
											"begin": 4483,
											"end": 4513,
											"name": "DUP2"
										},
										{
											"begin": 4483,
											"end": 4513,
											"name": "SLOAD"
										},
										{
											"begin": 4483,
											"end": 4513,
											"name": "DUP2"
										},
										{
											"begin": 4483,
											"end": 4513,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4483,
											"end": 4513,
											"name": "MUL"
										},
										{
											"begin": 4483,
											"end": 4513,
											"name": "NOT"
										},
										{
											"begin": 4483,
											"end": 4513,
											"name": "AND"
										},
										{
											"begin": 4483,
											"end": 4513,
											"name": "SWAP1"
										},
										{
											"begin": 4483,
											"end": 4513,
											"name": "DUP4"
										},
										{
											"begin": 4483,
											"end": 4513,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4483,
											"end": 4513,
											"name": "AND"
										},
										{
											"begin": 4483,
											"end": 4513,
											"name": "MUL"
										},
										{
											"begin": 4483,
											"end": 4513,
											"name": "OR"
										},
										{
											"begin": 4483,
											"end": 4513,
											"name": "SWAP1"
										},
										{
											"begin": 4483,
											"end": 4513,
											"name": "SSTORE"
										},
										{
											"begin": 4483,
											"end": 4513,
											"name": "POP"
										},
										{
											"begin": 4541,
											"end": 4542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4530,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4523,
											"end": 4542,
											"name": "DUP2"
										},
										{
											"begin": 4523,
											"end": 4542,
											"name": "SWAP1"
										},
										{
											"begin": 4523,
											"end": 4542,
											"name": "SSTORE"
										},
										{
											"begin": 4523,
											"end": 4542,
											"name": "POP"
										},
										{
											"begin": 4570,
											"end": 4571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4556,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 4552,
											"end": 4571,
											"name": "DUP2"
										},
										{
											"begin": 4552,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4552,
											"end": 4571,
											"name": "SSTORE"
										},
										{
											"begin": 4552,
											"end": 4571,
											"name": "POP"
										},
										{
											"begin": 4353,
											"end": 4580,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "JUMPDEST"
										},
										{
											"begin": 3995,
											"end": 3999,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4039,
											"name": "SELFBALANCE"
										},
										{
											"begin": 4011,
											"end": 4039,
											"name": "SWAP1"
										},
										{
											"begin": 4011,
											"end": 4039,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "SWAP1"
										},
										{
											"begin": 3944,
											"end": 4046,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "JUMPDEST"
										},
										{
											"begin": 2444,
											"end": 2448,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2363,
											"name": "DUP1"
										},
										{
											"begin": 2347,
											"end": 2359,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2347,
											"end": 2359,
											"name": "SLOAD"
										},
										{
											"begin": 2347,
											"end": 2363,
											"name": "GT"
										},
										{
											"begin": 2339,
											"end": 2364,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2339,
											"end": 2364,
											"name": "JUMPI"
										},
										{
											"begin": 2339,
											"end": 2364,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2364,
											"name": "DUP1"
										},
										{
											"begin": 2339,
											"end": 2364,
											"name": "REVERT"
										},
										{
											"begin": 2339,
											"end": 2364,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 2339,
											"end": 2364,
											"name": "JUMPDEST"
										},
										{
											"begin": 2520,
											"end": 2526,
											"name": "PUSH",
											"value": "F423F"
										},
										{
											"begin": 2514,
											"end": 2515,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2501,
											"end": 2513,
											"name": "NUMBER"
										},
										{
											"begin": 2501,
											"end": 2515,
											"name": "SUB"
										},
										{
											"begin": 2491,
											"end": 2516,
											"name": "BLOCKHASH"
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "SHR"
										},
										{
											"begin": 2486,
											"end": 2526,
											"name": "DUP2"
										},
										{
											"begin": 2486,
											"end": 2526,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2486,
											"end": 2526,
											"name": "JUMPI"
										},
										{
											"begin": 2486,
											"end": 2526,
											"name": "INVALID"
										},
										{
											"begin": 2486,
											"end": 2526,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2486,
											"end": 2526,
											"name": "JUMPDEST"
										},
										{
											"begin": 2486,
											"end": 2526,
											"name": "MOD"
										},
										{
											"begin": 2474,
											"end": 2483,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "DUP2"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "SWAP1"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "SSTORE"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "POP"
										},
										{
											"begin": 2567,
											"end": 2568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2563,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2550,
											"end": 2559,
											"name": "DUP1"
										},
										{
											"begin": 2550,
											"end": 2559,
											"name": "SLOAD"
										},
										{
											"begin": 2550,
											"end": 2563,
											"name": "DUP2"
										},
										{
											"begin": 2550,
											"end": 2563,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2550,
											"end": 2563,
											"name": "JUMPI"
										},
										{
											"begin": 2550,
											"end": 2563,
											"name": "INVALID"
										},
										{
											"begin": 2550,
											"end": 2563,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 2550,
											"end": 2563,
											"name": "JUMPDEST"
										},
										{
											"begin": 2550,
											"end": 2563,
											"name": "MOD"
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "EQ"
										},
										{
											"begin": 2546,
											"end": 2805,
											"name": "ISZERO"
										},
										{
											"begin": 2546,
											"end": 2805,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 2546,
											"end": 2805,
											"name": "JUMPI"
										},
										{
											"begin": 2607,
											"end": 2608,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2597,
											"end": 2608,
											"name": "DUP2"
										},
										{
											"begin": 2597,
											"end": 2608,
											"name": "SWAP1"
										},
										{
											"begin": 2597,
											"end": 2608,
											"name": "SSTORE"
										},
										{
											"begin": 2597,
											"end": 2608,
											"name": "POP"
										},
										{
											"begin": 2642,
											"end": 2643,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2626,
											"end": 2638,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2626,
											"end": 2638,
											"name": "SLOAD"
										},
										{
											"begin": 2626,
											"end": 2643,
											"name": "EQ"
										},
										{
											"begin": 2622,
											"end": 2794,
											"name": "ISZERO"
										},
										{
											"begin": 2622,
											"end": 2794,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2622,
											"end": 2794,
											"name": "JUMPI"
										},
										{
											"begin": 2671,
											"end": 2672,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2664,
											"end": 2668,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2664,
											"end": 2672,
											"name": "DUP2"
										},
										{
											"begin": 2664,
											"end": 2672,
											"name": "SWAP1"
										},
										{
											"begin": 2664,
											"end": 2672,
											"name": "SSTORE"
										},
										{
											"begin": 2664,
											"end": 2672,
											"name": "POP"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SWAP1"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SLOAD"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SWAP1"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "EXP"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SWAP1"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "DIV"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "AND"
										},
										{
											"begin": 2702,
											"end": 2718,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2702,
											"end": 2718,
											"name": "AND"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SELFBALANCE"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "SWAP1"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "DUP2"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "ISZERO"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "MUL"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "SWAP1"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "MLOAD"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "MLOAD"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "DUP1"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "DUP4"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "SUB"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "DUP2"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "DUP6"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "DUP9"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "DUP9"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "CALL"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "SWAP4"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "POP"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "POP"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "POP"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "POP"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "POP"
										},
										{
											"begin": 2759,
											"end": 2766,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 2759,
											"end": 2764,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2759,
											"end": 2766,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2759,
											"end": 2766,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 2759,
											"end": 2766,
											"name": "JUMPDEST"
										},
										{
											"begin": 2622,
											"end": 2794,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 2622,
											"end": 2794,
											"name": "JUMPDEST"
										},
										{
											"begin": 2546,
											"end": 2805,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 2546,
											"end": 2805,
											"name": "JUMPDEST"
										},
										{
											"begin": 2836,
											"end": 2837,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2831,
											"end": 2832,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "DUP1"
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "SLOAD"
										},
										{
											"begin": 2819,
											"end": 2832,
											"name": "DUP2"
										},
										{
											"begin": 2819,
											"end": 2832,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 2819,
											"end": 2832,
											"name": "JUMPI"
										},
										{
											"begin": 2819,
											"end": 2832,
											"name": "INVALID"
										},
										{
											"begin": 2819,
											"end": 2832,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 2819,
											"end": 2832,
											"name": "JUMPDEST"
										},
										{
											"begin": 2819,
											"end": 2832,
											"name": "MOD"
										},
										{
											"begin": 2819,
											"end": 2837,
											"name": "EQ"
										},
										{
											"begin": 2815,
											"end": 3134,
											"name": "ISZERO"
										},
										{
											"begin": 2815,
											"end": 3134,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 2815,
											"end": 3134,
											"name": "JUMPI"
										},
										{
											"begin": 2864,
											"end": 2865,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2854,
											"end": 2861,
											"name": "DUP1"
										},
										{
											"begin": 2854,
											"end": 2865,
											"name": "DUP2"
										},
										{
											"begin": 2854,
											"end": 2865,
											"name": "SWAP1"
										},
										{
											"begin": 2854,
											"end": 2865,
											"name": "SSTORE"
										},
										{
											"begin": 2854,
											"end": 2865,
											"name": "POP"
										},
										{
											"begin": 2899,
											"end": 2900,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2883,
											"end": 2895,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2883,
											"end": 2895,
											"name": "SLOAD"
										},
										{
											"begin": 2883,
											"end": 2900,
											"name": "EQ"
										},
										{
											"begin": 2879,
											"end": 3123,
											"name": "ISZERO"
										},
										{
											"begin": 2879,
											"end": 3123,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 2879,
											"end": 3123,
											"name": "JUMPI"
										},
										{
											"begin": 2928,
											"end": 2929,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2921,
											"end": 2925,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2921,
											"end": 2929,
											"name": "DUP2"
										},
										{
											"begin": 2921,
											"end": 2929,
											"name": "SWAP1"
										},
										{
											"begin": 2921,
											"end": 2929,
											"name": "SSTORE"
										},
										{
											"begin": 2921,
											"end": 2929,
											"name": "POP"
										},
										{
											"begin": 3031,
											"end": 3038,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 3031,
											"end": 3038,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3038,
											"name": "SWAP1"
										},
										{
											"begin": 3031,
											"end": 3038,
											"name": "SLOAD"
										},
										{
											"begin": 3031,
											"end": 3038,
											"name": "SWAP1"
										},
										{
											"begin": 3031,
											"end": 3038,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3031,
											"end": 3038,
											"name": "EXP"
										},
										{
											"begin": 3031,
											"end": 3038,
											"name": "SWAP1"
										},
										{
											"begin": 3031,
											"end": 3038,
											"name": "DIV"
										},
										{
											"begin": 3031,
											"end": 3038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3031,
											"end": 3038,
											"name": "AND"
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "AND"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 3048,
											"end": 3069,
											"name": "SELFBALANCE"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "SWAP1"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "DUP2"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "ISZERO"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "MUL"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "SWAP1"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "MLOAD"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "MLOAD"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "DUP1"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "DUP4"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "SUB"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "DUP2"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "DUP6"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "DUP9"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "DUP9"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "CALL"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "SWAP4"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "POP"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "POP"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "POP"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "POP"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3031,
											"end": 3070,
											"name": "POP"
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 3088,
											"end": 3093,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "JUMPDEST"
										},
										{
											"begin": 2879,
											"end": 3123,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 2879,
											"end": 3123,
											"name": "JUMPDEST"
										},
										{
											"begin": 2815,
											"end": 3134,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 2815,
											"end": 3134,
											"name": "JUMPDEST"
										},
										{
											"begin": 3168,
											"end": 3169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3164,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 3160,
											"end": 3164,
											"name": "SLOAD"
										},
										{
											"begin": 3160,
											"end": 3169,
											"name": "EQ"
										},
										{
											"begin": 3156,
											"end": 3367,
											"name": "ISZERO"
										},
										{
											"begin": 3156,
											"end": 3367,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 3156,
											"end": 3367,
											"name": "JUMPI"
										},
										{
											"begin": 3279,
											"end": 3290,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3279,
											"end": 3290,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3290,
											"name": "SWAP1"
										},
										{
											"begin": 3279,
											"end": 3290,
											"name": "SLOAD"
										},
										{
											"begin": 3279,
											"end": 3290,
											"name": "SWAP1"
										},
										{
											"begin": 3279,
											"end": 3290,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3279,
											"end": 3290,
											"name": "EXP"
										},
										{
											"begin": 3279,
											"end": 3290,
											"name": "SWAP1"
										},
										{
											"begin": 3279,
											"end": 3290,
											"name": "DIV"
										},
										{
											"begin": 3279,
											"end": 3290,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3279,
											"end": 3290,
											"name": "AND"
										},
										{
											"begin": 3279,
											"end": 3299,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3279,
											"end": 3299,
											"name": "AND"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 3300,
											"end": 3321,
											"name": "SELFBALANCE"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "SWAP1"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "DUP2"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "ISZERO"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "MUL"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "SWAP1"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "MLOAD"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "MLOAD"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "DUP1"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "DUP4"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "SUB"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "DUP2"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "DUP6"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "DUP9"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "DUP9"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "CALL"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "SWAP4"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "POP"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "POP"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "POP"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "POP"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3279,
											"end": 3322,
											"name": "POP"
										},
										{
											"begin": 3336,
											"end": 3343,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 3336,
											"end": 3341,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 3336,
											"end": 3343,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3336,
											"end": 3343,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 3336,
											"end": 3343,
											"name": "JUMPDEST"
										},
										{
											"begin": 3156,
											"end": 3367,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 3156,
											"end": 3367,
											"name": "JUMPDEST"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "SWAP1"
										},
										{
											"begin": 2388,
											"end": 3382,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "JUMPDEST"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "SLOAD"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "DUP2"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "JUMPDEST"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "SLOAD"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "DUP2"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "JUMPDEST"
										},
										{
											"begin": 159,
											"end": 167,
											"name": "PUSH",
											"value": "8AC7230489E80000"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "DUP2"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "JUMPDEST"
										},
										{
											"begin": 4117,
											"end": 4121,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4151,
											"end": 4158,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4151,
											"end": 4158,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4151,
											"end": 4158,
											"name": "SWAP1"
										},
										{
											"begin": 4151,
											"end": 4158,
											"name": "SLOAD"
										},
										{
											"begin": 4151,
											"end": 4158,
											"name": "SWAP1"
										},
										{
											"begin": 4151,
											"end": 4158,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4151,
											"end": 4158,
											"name": "EXP"
										},
										{
											"begin": 4151,
											"end": 4158,
											"name": "SWAP1"
										},
										{
											"begin": 4151,
											"end": 4158,
											"name": "DIV"
										},
										{
											"begin": 4151,
											"end": 4158,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4151,
											"end": 4158,
											"name": "AND"
										},
										{
											"begin": 4137,
											"end": 4158,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4137,
											"end": 4158,
											"name": "AND"
										},
										{
											"begin": 4137,
											"end": 4147,
											"name": "CALLER"
										},
										{
											"begin": 4137,
											"end": 4158,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4137,
											"end": 4158,
											"name": "AND"
										},
										{
											"begin": 4137,
											"end": 4158,
											"name": "EQ"
										},
										{
											"begin": 4133,
											"end": 4193,
											"name": "ISZERO"
										},
										{
											"begin": 4133,
											"end": 4193,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 4133,
											"end": 4193,
											"name": "JUMPI"
										},
										{
											"begin": 4181,
											"end": 4182,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4174,
											"end": 4182,
											"name": "SWAP1"
										},
										{
											"begin": 4174,
											"end": 4182,
											"name": "POP"
										},
										{
											"begin": 4174,
											"end": 4182,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 4174,
											"end": 4182,
											"name": "JUMP"
										},
										{
											"begin": 4133,
											"end": 4193,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 4133,
											"end": 4193,
											"name": "JUMPDEST"
										},
										{
											"begin": 4212,
											"end": 4223,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4212,
											"end": 4223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4212,
											"end": 4223,
											"name": "SWAP1"
										},
										{
											"begin": 4212,
											"end": 4223,
											"name": "SLOAD"
										},
										{
											"begin": 4212,
											"end": 4223,
											"name": "SWAP1"
										},
										{
											"begin": 4212,
											"end": 4223,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4212,
											"end": 4223,
											"name": "EXP"
										},
										{
											"begin": 4212,
											"end": 4223,
											"name": "SWAP1"
										},
										{
											"begin": 4212,
											"end": 4223,
											"name": "DIV"
										},
										{
											"begin": 4212,
											"end": 4223,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4212,
											"end": 4223,
											"name": "AND"
										},
										{
											"begin": 4198,
											"end": 4223,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4198,
											"end": 4223,
											"name": "AND"
										},
										{
											"begin": 4198,
											"end": 4208,
											"name": "CALLER"
										},
										{
											"begin": 4198,
											"end": 4223,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4198,
											"end": 4223,
											"name": "AND"
										},
										{
											"begin": 4198,
											"end": 4223,
											"name": "EQ"
										},
										{
											"begin": 4194,
											"end": 4258,
											"name": "ISZERO"
										},
										{
											"begin": 4194,
											"end": 4258,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 4194,
											"end": 4258,
											"name": "JUMPI"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4239,
											"end": 4247,
											"name": "SWAP1"
										},
										{
											"begin": 4239,
											"end": 4247,
											"name": "POP"
										},
										{
											"begin": 4239,
											"end": 4247,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 4239,
											"end": 4247,
											"name": "JUMP"
										},
										{
											"begin": 4194,
											"end": 4258,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 4194,
											"end": 4258,
											"name": "JUMPDEST"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "JUMPDEST"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "SWAP1"
										},
										{
											"begin": 4078,
											"end": 4264,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "JUMPDEST"
										},
										{
											"begin": 2119,
											"end": 2120,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2104,
											"end": 2116,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2104,
											"end": 2116,
											"name": "SLOAD"
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "LT"
										},
										{
											"begin": 2096,
											"end": 2121,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 2096,
											"end": 2121,
											"name": "JUMPI"
										},
										{
											"begin": 2096,
											"end": 2121,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2121,
											"name": "DUP1"
										},
										{
											"begin": 2096,
											"end": 2121,
											"name": "REVERT"
										},
										{
											"begin": 2096,
											"end": 2121,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 2096,
											"end": 2121,
											"name": "JUMPDEST"
										},
										{
											"begin": 1885,
											"end": 1892,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 1885,
											"end": 1892,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1892,
											"name": "SWAP1"
										},
										{
											"begin": 1885,
											"end": 1892,
											"name": "SLOAD"
										},
										{
											"begin": 1885,
											"end": 1892,
											"name": "SWAP1"
										},
										{
											"begin": 1885,
											"end": 1892,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1885,
											"end": 1892,
											"name": "EXP"
										},
										{
											"begin": 1885,
											"end": 1892,
											"name": "SWAP1"
										},
										{
											"begin": 1885,
											"end": 1892,
											"name": "DIV"
										},
										{
											"begin": 1885,
											"end": 1892,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1885,
											"end": 1892,
											"name": "AND"
										},
										{
											"begin": 1871,
											"end": 1892,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1871,
											"end": 1892,
											"name": "AND"
										},
										{
											"begin": 1871,
											"end": 1881,
											"name": "CALLER"
										},
										{
											"begin": 1871,
											"end": 1892,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1871,
											"end": 1892,
											"name": "AND"
										},
										{
											"begin": 1871,
											"end": 1892,
											"name": "EQ"
										},
										{
											"begin": 1863,
											"end": 1893,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 1863,
											"end": 1893,
											"name": "JUMPI"
										},
										{
											"begin": 1863,
											"end": 1893,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1893,
											"name": "DUP1"
										},
										{
											"begin": 1863,
											"end": 1893,
											"name": "REVERT"
										},
										{
											"begin": 1863,
											"end": 1893,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 1863,
											"end": 1893,
											"name": "JUMPDEST"
										},
										{
											"begin": 2239,
											"end": 2245,
											"name": "DUP1"
										},
										{
											"begin": 1989,
											"end": 1990,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1986,
											"name": "DUP2"
										},
										{
											"begin": 1980,
											"end": 1990,
											"name": "GT"
										},
										{
											"begin": 1972,
											"end": 1991,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 1972,
											"end": 1991,
											"name": "JUMPI"
										},
										{
											"begin": 1972,
											"end": 1991,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1991,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 1991,
											"name": "REVERT"
										},
										{
											"begin": 1972,
											"end": 1991,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 1972,
											"end": 1991,
											"name": "JUMPDEST"
										},
										{
											"begin": 2018,
											"end": 2019,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2009,
											"end": 2015,
											"name": "DUP2"
										},
										{
											"begin": 2009,
											"end": 2019,
											"name": "LT"
										},
										{
											"begin": 2001,
											"end": 2020,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 2001,
											"end": 2020,
											"name": "JUMPI"
										},
										{
											"begin": 2001,
											"end": 2020,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2020,
											"name": "DUP1"
										},
										{
											"begin": 2001,
											"end": 2020,
											"name": "REVERT"
										},
										{
											"begin": 2001,
											"end": 2020,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 2001,
											"end": 2020,
											"name": "JUMPDEST"
										},
										{
											"begin": 2273,
											"end": 2279,
											"name": "DUP2"
										},
										{
											"begin": 2258,
											"end": 2270,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2258,
											"end": 2279,
											"name": "DUP2"
										},
										{
											"begin": 2258,
											"end": 2279,
											"name": "SWAP1"
										},
										{
											"begin": 2258,
											"end": 2279,
											"name": "SSTORE"
										},
										{
											"begin": 2258,
											"end": 2279,
											"name": "POP"
										},
										{
											"begin": 1903,
											"end": 1904,
											"name": "POP"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "POP"
										},
										{
											"begin": 2145,
											"end": 2287,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "JUMPDEST"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "SLOAD"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "DUP2"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "SLOAD"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "DUP2"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3416,
											"end": 3661,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 3416,
											"end": 3661,
											"name": "JUMPDEST"
										},
										{
											"begin": 3478,
											"end": 3479,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3460,
											"end": 3470,
											"name": "DUP1"
										},
										{
											"begin": 3460,
											"end": 3479,
											"name": "DUP2"
										},
										{
											"begin": 3460,
											"end": 3479,
											"name": "SWAP1"
										},
										{
											"begin": 3460,
											"end": 3479,
											"name": "SSTORE"
										},
										{
											"begin": 3460,
											"end": 3479,
											"name": "POP"
										},
										{
											"begin": 3515,
											"end": 3518,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3496,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 3489,
											"end": 3496,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3519,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3489,
											"end": 3519,
											"name": "EXP"
										},
										{
											"begin": 3489,
											"end": 3519,
											"name": "DUP2"
										},
										{
											"begin": 3489,
											"end": 3519,
											"name": "SLOAD"
										},
										{
											"begin": 3489,
											"end": 3519,
											"name": "DUP2"
										},
										{
											"begin": 3489,
											"end": 3519,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3519,
											"name": "MUL"
										},
										{
											"begin": 3489,
											"end": 3519,
											"name": "NOT"
										},
										{
											"begin": 3489,
											"end": 3519,
											"name": "AND"
										},
										{
											"begin": 3489,
											"end": 3519,
											"name": "SWAP1"
										},
										{
											"begin": 3489,
											"end": 3519,
											"name": "DUP4"
										},
										{
											"begin": 3489,
											"end": 3519,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3519,
											"name": "AND"
										},
										{
											"begin": 3489,
											"end": 3519,
											"name": "MUL"
										},
										{
											"begin": 3489,
											"end": 3519,
											"name": "OR"
										},
										{
											"begin": 3489,
											"end": 3519,
											"name": "SWAP1"
										},
										{
											"begin": 3489,
											"end": 3519,
											"name": "SSTORE"
										},
										{
											"begin": 3489,
											"end": 3519,
											"name": "POP"
										},
										{
											"begin": 3555,
											"end": 3558,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3540,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3529,
											"end": 3540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3559,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3529,
											"end": 3559,
											"name": "EXP"
										},
										{
											"begin": 3529,
											"end": 3559,
											"name": "DUP2"
										},
										{
											"begin": 3529,
											"end": 3559,
											"name": "SLOAD"
										},
										{
											"begin": 3529,
											"end": 3559,
											"name": "DUP2"
										},
										{
											"begin": 3529,
											"end": 3559,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3529,
											"end": 3559,
											"name": "MUL"
										},
										{
											"begin": 3529,
											"end": 3559,
											"name": "NOT"
										},
										{
											"begin": 3529,
											"end": 3559,
											"name": "AND"
										},
										{
											"begin": 3529,
											"end": 3559,
											"name": "SWAP1"
										},
										{
											"begin": 3529,
											"end": 3559,
											"name": "DUP4"
										},
										{
											"begin": 3529,
											"end": 3559,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3529,
											"end": 3559,
											"name": "AND"
										},
										{
											"begin": 3529,
											"end": 3559,
											"name": "MUL"
										},
										{
											"begin": 3529,
											"end": 3559,
											"name": "OR"
										},
										{
											"begin": 3529,
											"end": 3559,
											"name": "SWAP1"
										},
										{
											"begin": 3529,
											"end": 3559,
											"name": "SSTORE"
										},
										{
											"begin": 3529,
											"end": 3559,
											"name": "POP"
										},
										{
											"begin": 3587,
											"end": 3588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3569,
											"end": 3580,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3569,
											"end": 3588,
											"name": "DUP2"
										},
										{
											"begin": 3569,
											"end": 3588,
											"name": "SWAP1"
										},
										{
											"begin": 3569,
											"end": 3588,
											"name": "SSTORE"
										},
										{
											"begin": 3569,
											"end": 3588,
											"name": "POP"
										},
										{
											"begin": 3616,
											"end": 3617,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3610,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3598,
											"end": 3617,
											"name": "DUP2"
										},
										{
											"begin": 3598,
											"end": 3617,
											"name": "SWAP1"
										},
										{
											"begin": 3598,
											"end": 3617,
											"name": "SSTORE"
										},
										{
											"begin": 3598,
											"end": 3617,
											"name": "POP"
										},
										{
											"begin": 3645,
											"end": 3646,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3639,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3627,
											"end": 3646,
											"name": "DUP2"
										},
										{
											"begin": 3627,
											"end": 3646,
											"name": "SWAP1"
										},
										{
											"begin": 3627,
											"end": 3646,
											"name": "SSTORE"
										},
										{
											"begin": 3627,
											"end": 3646,
											"name": "POP"
										},
										{
											"begin": 3416,
											"end": 3661,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BET_MAX()": "d0017a0c",
							"BET_MIN()": "2626ab08",
							"getContractBalance()": "6f9fb98a",
							"getOutcome()": "7e7e4b47",
							"housePlayed()": "fc98f42e",
							"initialBet()": "1d73c64c",
							"outcome()": "27793f87",
							"paid()": "295b4e17",
							"playerChoice()": "adef7cdd",
							"playerChooses(uint256)": "e92788d6",
							"playerPlayed()": "8e687aed",
							"randomNum()": "f630aa65",
							"register()": "1aa3a008",
							"reset_contract()": "4e22fb5b",
							"whoAmI()": "da91254c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"BET_MAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BET_MIN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getOutcome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"housePlayed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialBet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"outcome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"playerChoice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"choice\",\"type\":\"uint256\"}],\"name\":\"playerChooses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"playerPlayed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"randomNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"register\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reset_contract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"whoAmI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"getContractBalance()\":{\"notice\":\"***********************************************************************\"}}}},\"settings\":{\"compilationTarget\":{\"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":\"CoinFlip\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol\":{\"keccak256\":\"0x9ff12ff00653e24aa1c60505f1268cb016dca4a88220e94690e2fcb0f24a10ab\",\"urls\":[\"bzz-raw://380e6bae02da8880231f374e0901a69fd413c0bcb9296ac685e6897a916499e7\",\"dweb:/ipfs/QmXHVoN5WiZbCVxKki19V73bCwqTYnu9xoyvTgXDNHFBjg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 9,
								"contract": "Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol:CoinFlip",
								"label": "initialBet",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 11,
								"contract": "Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol:CoinFlip",
								"label": "outcome",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 13,
								"contract": "Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol:CoinFlip",
								"label": "randomNum",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 16,
								"contract": "Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol:CoinFlip",
								"label": "housePlayed",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 19,
								"contract": "Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol:CoinFlip",
								"label": "playerPlayed",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 22,
								"contract": "Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol:CoinFlip",
								"label": "playerChoice",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol:CoinFlip",
								"label": "paid",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 27,
								"contract": "Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol:CoinFlip",
								"label": "playerA",
								"offset": 0,
								"slot": "7",
								"type": "t_address_payable"
							},
							{
								"astId": 29,
								"contract": "Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol:CoinFlip",
								"label": "HouseWallet",
								"offset": 0,
								"slot": "8",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {
							"getContractBalance()": {
								"notice": "***********************************************************************"
							}
						}
					}
				}
			}
		},
		"sources": {
			"Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol": {
				"ast": {
					"absolutePath": "Group Projects/Group Project # 3_Rock_Paper_scissors/Project-3/Starter code/Coinflip game/test_game.sol",
					"exportedSymbols": {
						"CoinFlip": [
							396
						]
					},
					"id": 397,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 396,
							"linearizedBaseContracts": [
								396
							],
							"name": "CoinFlip",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 4,
									"name": "BET_MIN",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "50:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "50:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "88:5:0",
										"subdenomination": "wei",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 7,
									"name": "BET_MAX",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "121:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "121:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3130",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "159:8:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 9,
									"name": "initialBet",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "173:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "173:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 11,
									"name": "outcome",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "251:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "251:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 13,
									"name": "randomNum",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "276:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "276:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 16,
									"name": "housePlayed",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "303:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 14,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "303:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 15,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "329:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 19,
									"name": "playerPlayed",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "336:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 17,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "336:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 18,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "363:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 22,
									"name": "playerChoice",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "370:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 20,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "370:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 21,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "397:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 25,
									"name": "paid",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "404:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 23,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "404:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 24,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "431:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"name": "playerA",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "466:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "466:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 29,
									"name": "HouseWallet",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "495:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 28,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "495:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "853:157:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 32,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "871:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "871:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 34,
																"name": "BET_MIN",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "884:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "871:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 31,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															414,
															415
														],
														"referencedDeclaration": 414,
														"src": "863:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "863:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "863:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 39,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "910:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "910:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 41,
																"name": "BET_MAX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "923:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "910:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 38,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															414,
															415
														],
														"referencedDeclaration": 414,
														"src": "902:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "902:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "902:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 46,
																	"name": "initialBet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "949:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 47,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "963:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "949:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 49,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "968:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "968:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 51,
																	"name": "initialBet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "981:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "968:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "949:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															414,
															415
														],
														"referencedDeclaration": 414,
														"src": "941:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "941:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "941:51:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1002:1:0"
											}
										]
									},
									"documentation": "***********************************************************************",
									"id": 58,
									"name": "validBet",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "850:2:0"
									},
									"src": "833:177:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "1048:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 61,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1066:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1066:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 63,
																"name": "playerA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "1080:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1066:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 60,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															414,
															415
														],
														"referencedDeclaration": 414,
														"src": "1058:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1058:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1058:30:0"
											},
											{
												"id": 67,
												"nodeType": "PlaceholderStatement",
												"src": "1107:1:0"
											}
										]
									},
									"documentation": null,
									"id": 69,
									"name": "notAlreadyRegistered",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1045:2:0"
									},
									"src": "1016:99:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "1187:370:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 76,
														"name": "HouseWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1210:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "307830",
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1233:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1225:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1225:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1210:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 92,
																"name": "playerA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "1346:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "307830",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1365:3:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1357:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1357:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1346:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 97,
																"name": "HouseWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1373:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "307830",
																		"id": 99,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1396:3:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1388:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1388:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1373:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1346:54:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 119,
													"nodeType": "IfStatement",
													"src": "1341:191:0",
													"trueBody": {
														"id": 118,
														"nodeType": "Block",
														"src": "1403:129:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 103,
																		"name": "playerA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "1417:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 104,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "1430:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1430:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"src": "1417:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"id": 107,
																"nodeType": "ExpressionStatement",
																"src": "1417:23:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 108,
																		"name": "initialBet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "1454:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 109,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "1467:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1467:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1454:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 112,
																"nodeType": "ExpressionStatement",
																"src": "1454:22:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 113,
																		"name": "playerPlayed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "1490:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 114,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "1505:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1505:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1490:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 117,
																"nodeType": "ExpressionStatement",
																"src": "1490:24:0"
															}
														]
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "1206:326:0",
												"trueBody": {
													"id": 91,
													"nodeType": "Block",
													"src": "1239:87:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 81,
																	"name": "HouseWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "1253:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 82,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "1267:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1267:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "1253:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 85,
															"nodeType": "ExpressionStatement",
															"src": "1253:24:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 86,
																	"name": "housePlayed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "1291:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 87,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "1305:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 88,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1305:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1291:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 90,
															"nodeType": "ExpressionStatement",
															"src": "1291:23:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 72,
											"modifierName": {
												"argumentTypes": null,
												"id": 71,
												"name": "validBet",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "1157:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1157:8:0"
										},
										{
											"arguments": null,
											"id": 74,
											"modifierName": {
												"argumentTypes": null,
												"id": 73,
												"name": "notAlreadyRegistered",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 69,
												"src": "1166:20:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1166:20:0"
										}
									],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1139:2:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1187:0:0"
									},
									"scope": 396,
									"src": "1122:435:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "1844:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 125,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1871:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1871:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 127,
																"name": "playerA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "1885:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1871:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															414,
															415
														],
														"referencedDeclaration": 414,
														"src": "1863:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1863:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "1863:30:0"
											},
											{
												"id": 131,
												"nodeType": "PlaceholderStatement",
												"src": "1903:1:0"
											}
										]
									},
									"documentation": "***********************************************************************",
									"id": 133,
									"name": "is_caller_player",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:2:0"
									},
									"src": "1816:95:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "1953:85:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 138,
																"name": "choice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "1980:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1989:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1980:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 137,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															414,
															415
														],
														"referencedDeclaration": 414,
														"src": "1972:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1972:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "1972:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 144,
																"name": "choice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "2009:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "33",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2018:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "2009:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															414,
															415
														],
														"referencedDeclaration": 414,
														"src": "2001:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2001:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "2001:19:0"
											},
											{
												"id": 149,
												"nodeType": "PlaceholderStatement",
												"src": "2030:1:0"
											}
										]
									},
									"documentation": null,
									"id": 151,
									"name": "is_legal_play",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"name": "choice",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1940:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1940:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1939:13:0"
									},
									"src": "1917:121:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "2077:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 154,
																"name": "playerChoice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2104:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2119:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2104:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 153,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															414,
															415
														],
														"referencedDeclaration": 414,
														"src": "2096:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2096:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "2096:25:0"
											},
											{
												"id": 159,
												"nodeType": "PlaceholderStatement",
												"src": "2131:1:0"
											}
										]
									},
									"documentation": null,
									"id": 161,
									"name": "player_never_played",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2077:0:0"
									},
									"src": "2048:91:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "2247:40:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 173,
														"name": "playerChoice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "2258:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 174,
														"name": "choice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2273:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2258:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "2258:21:0"
											}
										]
									},
									"documentation": null,
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 166,
											"modifierName": {
												"argumentTypes": null,
												"id": 165,
												"name": "player_never_played",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 161,
												"src": "2188:19:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2188:19:0"
										},
										{
											"arguments": null,
											"id": 168,
											"modifierName": {
												"argumentTypes": null,
												"id": 167,
												"name": "is_caller_player",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 133,
												"src": "2208:16:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2208:16:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 170,
													"name": "choice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 163,
													"src": "2239:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 171,
											"modifierName": {
												"argumentTypes": null,
												"id": 169,
												"name": "is_legal_play",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 151,
												"src": "2225:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2225:21:0"
										}
									],
									"name": "playerChooses",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "choice",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "2168:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2168:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2167:13:0"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2247:0:0"
									},
									"scope": 396,
									"src": "2145:142:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "2320:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 181,
																"name": "playerChoice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2347:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2362:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2347:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															414,
															415
														],
														"referencedDeclaration": 414,
														"src": "2339:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2339:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "2339:25:0"
											},
											{
												"id": 186,
												"nodeType": "PlaceholderStatement",
												"src": "2374:1:0"
											}
										]
									},
									"documentation": null,
									"id": 188,
									"name": "has_player_played",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2320:0:0"
									},
									"src": "2293:89:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2450:932:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 195,
														"name": "randomNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2474:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 198,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 401,
																					"src": "2501:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "number",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2501:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 200,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2514:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "2501:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 197,
																		"name": "blockhash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "2491:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																			"typeString": "function (uint256) view returns (bytes32)"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2491:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2486:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": "uint"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2486:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "393939393939",
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2520:6:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_999999_by_1",
																"typeString": "int_const 999999"
															},
															"value": "999999"
														},
														"src": "2486:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2474:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "2474:52:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 208,
															"name": "randomNum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "2550:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2562:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2550:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2567:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2550:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 239,
												"nodeType": "IfStatement",
												"src": "2546:259:0",
												"trueBody": {
													"id": 238,
													"nodeType": "Block",
													"src": "2570:235:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 213,
																	"name": "outcome",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "2597:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2607:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2597:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 216,
															"nodeType": "ExpressionStatement",
															"src": "2597:11:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 217,
																	"name": "playerChoice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "2626:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2642:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2626:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 237,
															"nodeType": "IfStatement",
															"src": "2622:172:0",
															"trueBody": {
																"id": 236,
																"nodeType": "Block",
																"src": "2645:149:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 220,
																				"name": "paid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 25,
																				"src": "2664:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2671:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "2664:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 223,
																		"nodeType": "ExpressionStatement",
																		"src": "2664:8:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 228,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 425,
																								"src": "2727:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_CoinFlip_$396",
																									"typeString": "contract CoinFlip"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_CoinFlip_$396",
																									"typeString": "contract CoinFlip"
																								}
																							],
																							"id": 227,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2719:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": "address"
																						},
																						"id": 229,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2719:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 230,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "balance",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "2719:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 224,
																					"name": "playerA",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 27,
																					"src": "2702:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2702:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2702:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 232,
																		"nodeType": "ExpressionStatement",
																		"src": "2702:39:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 233,
																				"name": "reset",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 322,
																				"src": "2759:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																					"typeString": "function ()"
																				}
																			},
																			"id": 234,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2759:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 235,
																		"nodeType": "ExpressionStatement",
																		"src": "2759:7:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 240,
															"name": "randomNum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "2819:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2831:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2819:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2836:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2819:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 271,
												"nodeType": "IfStatement",
												"src": "2815:319:0",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "2839:295:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 245,
																	"name": "outcome",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "2854:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2864:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2854:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 248,
															"nodeType": "ExpressionStatement",
															"src": "2854:11:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 249,
																	"name": "playerChoice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "2883:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2899:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2883:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 269,
															"nodeType": "IfStatement",
															"src": "2879:244:0",
															"trueBody": {
																"id": 268,
																"nodeType": "Block",
																"src": "2902:221:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 252,
																				"name": "paid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 25,
																				"src": "2921:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2928:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "2921:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 255,
																		"nodeType": "ExpressionStatement",
																		"src": "2921:8:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 260,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 425,
																								"src": "3056:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_CoinFlip_$396",
																									"typeString": "contract CoinFlip"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_CoinFlip_$396",
																									"typeString": "contract CoinFlip"
																								}
																							],
																							"id": 259,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3048:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": "address"
																						},
																						"id": 261,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3048:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 262,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "balance",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "3048:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 256,
																					"name": "playerA",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 27,
																					"src": "3031:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3031:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3031:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 264,
																		"nodeType": "ExpressionStatement",
																		"src": "3031:39:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 265,
																				"name": "reset",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 322,
																				"src": "3088:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																					"typeString": "function ()"
																				}
																			},
																			"id": 266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3088:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 267,
																		"nodeType": "ExpressionStatement",
																		"src": "3088:7:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 272,
														"name": "paid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3160:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3168:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3160:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 288,
												"nodeType": "IfStatement",
												"src": "3156:211:0",
												"trueBody": {
													"id": 287,
													"nodeType": "Block",
													"src": "3171:196:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 279,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 425,
																					"src": "3308:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_CoinFlip_$396",
																						"typeString": "contract CoinFlip"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_CoinFlip_$396",
																						"typeString": "contract CoinFlip"
																					}
																				],
																				"id": 278,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3300:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3300:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3300:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 275,
																		"name": "HouseWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "3279:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3279:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3279:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 283,
															"nodeType": "ExpressionStatement",
															"src": "3279:43:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 284,
																	"name": "reset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "3336:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3336:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 286,
															"nodeType": "ExpressionStatement",
															"src": "3336:7:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 191,
											"modifierName": {
												"argumentTypes": null,
												"id": 190,
												"name": "has_player_played",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 188,
												"src": "2417:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2417:17:0"
										}
									],
									"name": "getOutcome",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2407:2:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "2444:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2444:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2443:6:0"
									},
									"scope": 396,
									"src": "2388:994:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "3441:220:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 293,
														"name": "initialBet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "3460:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3478:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3460:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "3460:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 297,
														"name": "playerA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "3489:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "307830",
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3515:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3507:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3507:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3489:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "3489:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 303,
														"name": "HouseWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "3529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "307830",
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3555:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3547:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3547:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3529:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "3529:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 309,
														"name": "housePlayed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "3569:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3587:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3569:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "3569:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 313,
														"name": "playerPlayed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "3598:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 314,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3616:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3598:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "3598:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 317,
														"name": "playerChoice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "3627:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3645:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3627:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "3627:19:0"
											}
										]
									},
									"documentation": null,
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3430:2:0"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3441:0:0"
									},
									"scope": 396,
									"src": "3416:245:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "4001:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 328,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "4026:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_CoinFlip_$396",
																	"typeString": "contract CoinFlip"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_CoinFlip_$396",
																	"typeString": "contract CoinFlip"
																}
															],
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4018:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4018:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4018:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 326,
												"id": 331,
												"nodeType": "Return",
												"src": "4011:28:0"
											}
										]
									},
									"documentation": "***********************************************************************",
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContractBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3971:2:0"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "3995:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3995:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3994:6:0"
									},
									"scope": 396,
									"src": "3944:102:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "4123:141:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 338,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "4137:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4137:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 340,
														"name": "playerA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "4151:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4137:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 345,
												"nodeType": "IfStatement",
												"src": "4133:60:0",
												"trueBody": {
													"id": 344,
													"nodeType": "Block",
													"src": "4160:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4181:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"functionReturnParameters": 337,
															"id": 343,
															"nodeType": "Return",
															"src": "4174:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 346,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "4198:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4198:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 348,
														"name": "HouseWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "4212:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4198:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 353,
												"nodeType": "IfStatement",
												"src": "4194:64:0",
												"trueBody": {
													"id": 352,
													"nodeType": "Block",
													"src": "4225:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4246:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 337,
															"id": 351,
															"nodeType": "Return",
															"src": "4239:8:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "whoAmI",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4093:2:0"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "4117:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4117:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4116:6:0"
									},
									"scope": 396,
									"src": "4078:186:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "4299:48:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 358,
																"name": "outcome",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "4317:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4327:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4317:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 357,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															414,
															415
														],
														"referencedDeclaration": 414,
														"src": "4309:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4309:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "4309:20:0"
											},
											{
												"id": 363,
												"nodeType": "PlaceholderStatement",
												"src": "4339:1:0"
											}
										]
									},
									"documentation": null,
									"id": 365,
									"name": "game_has_outcome",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:2:0"
									},
									"src": "4271:76:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "4403:177:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 370,
														"name": "initialBet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "4414:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4432:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4414:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "4414:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 374,
														"name": "playerA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "4443:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "307830",
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4469:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4461:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4461:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4443:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "4443:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 380,
														"name": "HouseWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "4483:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "307830",
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4509:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4501:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4483:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "4483:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 386,
														"name": "outcome",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "4523:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4541:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4523:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "4523:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 390,
														"name": "paid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "4552:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4570:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4552:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "4552:19:0"
											}
										]
									},
									"documentation": null,
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 368,
											"modifierName": {
												"argumentTypes": null,
												"id": 367,
												"name": "game_has_outcome",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 365,
												"src": "4386:16:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4386:16:0"
										}
									],
									"name": "reset_contract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4376:2:0"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4403:0:0"
									},
									"scope": 396,
									"src": "4353:227:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 397,
							"src": "25:4557:0"
						}
					],
					"src": "0:4585:0"
				},
				"id": 0
			}
		}
	}
}